//All 6 are for the bar chart
var barFull = [0,0,0,0,0,0];
var barMalware = [0,0,0,0,0,0];
// Data for Behaviour Image
var behaviourImageData = "";
//var process = 0, file = 0, registry = 0, virtual = 0, ipc = 0, memSection = 0;
// For names in the bar chart
var active_api=["Process", "File", "Registry", "Memory-Section", "Virtual-Memory", "IPC"];
var processColor = [];
var count=0;
var malName="";
var api_call_type_remove=[];
// This is a temp file name need to be replace by filename of mainFunc(filename)

// In templates
//var filename1 = "static/data/7cd6edef-0b8c-4f6c-95ac-7b4e799c54a4.csv";

function mainFunc(filename,malwarename){
//function mainFunc(){

	malName=malwarename;
	d3.csv(filename,function(data){
		
		// This function gets data for the behaviour graph
			behaviourImageData = data.map(function(d){
				count++;
				return {
					instr: parseInt(d.instr),
					call_name: getClassName(d.call_name),
					name: d.name
				}
		});
		
		
		// this function is a call back function and all code related to the data will be here
		data.forEach(function(data){
			
			if(data.call_name=="new_pid"||data.call_name=="nt_create_user_process"||data.call_name=="nt_terminate_process")
				barFull[0]++;
			if(data.call_name=="nt_create_file"||data.call_name=="nt_read_file"||data.call_name=="nt_write_file"||data.call_name=="nt_delete_file")
				barFull[1]++;
			if(data.call_name=="nt_create_key"||data.call_name=="nt_create_key_transacted"||data.call_name=="nt_open_key"||data.call_name=="nt_open_key_ex"||data.call_name=="nt_open_key_transacted"||data.call_name=="nt_open_key_transacted_ex"||data.call_name=="nt_delete_key"||data.call_name=="nt_query_key")
				barFull[2]++;
			if(data.call_name=="nt_read_virtual_memory"||data.call_name=="nt_write_virtual_memory")
				barFull[4]++;
			if(data.call_name=="nt_create_port"||data.call_name=="nt_connect_port"||data.call_name=="nt_listen_port"||data.call_name=="nt_accept_connect_port"||data.call_name=="nt_complete_connect_port"||data.call_name=="nt_request_port"||data.call_name=="nt_request_wait_reply_port"||data.call_name=="nt_reply_port"||data.call_name=="nt_reply_wait_reply_port"||data.call_name=="nt_reply_wait_receive_port"||data.call_name=="nt_impersonate_client_of_port")
				barFull[5]++;
			if(data.call_name=="nt_create_section"||data.call_name=="nt_open_section"||data.call_name=="nt_map_view_of_section")
				barFull[3]++;
			if(data.name==malwarename){	
				
				if(data.call_name=="new_pid"||data.call_name=="nt_create_user_process"||data.call_name=="nt_terminate_process")
					barMalware[0]++;
				if(data.call_name=="nt_create_file"||data.call_name=="nt_read_file"||data.call_name=="nt_write_file"||data.call_name=="nt_delete_file")
					barMalware[1]++;
				if(data.call_name=="nt_create_key"||data.call_name=="nt_create_key_transacted"||data.call_name=="nt_open_key"||data.call_name=="nt_open_key_ex"||data.call_name=="nt_open_key_transacted"||data.call_name=="nt_open_key_transacted_ex"||data.call_name=="nt_delete_key"||data.call_name=="nt_query_key")
					barMalware[2]++;
				if(data.call_name=="nt_read_virtual_memory"||data.call_name=="nt_write_virtual_memory")
					barMalware[4]++;
				if(data.call_name=="nt_create_port"||data.call_name=="nt_connect_port"||data.call_name=="nt_listen_port"||data.call_name=="nt_accept_connect_port"||data.call_name=="nt_complete_connect_port"||data.call_name=="nt_request_port"||data.call_name=="nt_request_wait_reply_port"||data.call_name=="nt_reply_port"||data.call_name=="nt_reply_wait_reply_port"||data.call_name=="nt_reply_wait_receive_port"||data.call_name=="nt_impersonate_client_of_port")
					barMalware[5]++;
				if(data.call_name=="nt_create_section"||data.call_name=="nt_open_section"||data.call_name=="nt_map_view_of_section")
					barMalware[3]++;
			}
		});
		api_call_type_remove=[];
		generateBarGraph();
		d3.select("#behaviour-chart").selectAll("*").remove();
		generateBehaviourGraph(behaviourImageData);
	});
}

function checkedOption(){
	
	generateBarGraph();
	d3.select("#behaviour-chart").selectAll("*").remove();
	generateBehaviourGraph(behaviourImageData);
}
function generateBehaviourGraph(data){
	
	var malware = document.getElementsByName("malware");
	var pos = 1;
	var row =1;
	d3.select("#behaviour-chart")
		.attr("height","1830px")
		.attr("width","950px")
        .selectAll("rect")
		.data(data)
		.enter()
			.append("rect")
			.attr("width","1")
			.attr("height", "15px")
			.attr("x",function(d,i){
				
				if(i%1280==0){
				
					pos = 0;
				}
				else{
					
					pos=pos+1;
				}
				return pos;;
			})
			.attr("y",function(d,i){
				
				if(i%1280==0){
				
					row=row+20;
				}	
				return row;
			})
			.attr("class", function(d){
				
				if(malware[1].checked && d.name!=malName)
					return "white-color";
				if(api_call_type_remove.indexOf(d.call_name)>-1)
					return "white-color";
				else
					return d.call_name;
			})
			.on("mouseover", function(d){
				
				d3.select("#tooltip").select("#text1").text("Id: "+d.instr)
				d3.select("#tooltip").select("#text2").text("Type: "+d.call_name);
				d3.select("#tooltip").style({
					
					'display': 'block',
					'top': d3.event.y + 10,
					'left': d3.event.x + 10
				}); 
			})
			.on("mouseout", function(d){
					
				d3.select("#tooltip").style({
					
					'display': 'none'
				});
			});
}
function getClassName(callname){
	
	if(callname=="new_pid"||callname=="nt_create_user_process"||callname=="nt_terminate_process"||callname=="Process")
		return "process";
	if(callname=="nt_create_file"||callname=="nt_read_file"||callname=="nt_write_file"||callname=="nt_delete_file"||callname=="File")
		return "file";
	if(callname=="Registry"||callname=="nt_create_key"||callname=="nt_create_key_transacted"||callname=="nt_open_key"||callname=="nt_open_key_ex"||callname=="nt_open_key_transacted"||callname=="nt_open_key_transacted_ex"||callname=="nt_delete_key"||callname=="nt_query_key")
		return "registry";
	if(callname=="nt_read_virtual_memory"||callname=="nt_write_virtual_memory"||callname=="Virtual-Memory")
		return "virtual-memory";
	if(callname=="IPC"||callname=="nt_create_port"||callname=="nt_connect_port"||callname=="nt_listen_port"||callname=="nt_accept_connect_port"||callname=="nt_complete_connect_port"||callname=="nt_request_port"||callname=="nt_request_wait_reply_port"||callname=="nt_reply_port"||callname=="nt_reply_wait_reply_port"||callname=="nt_reply_wait_receive_port"||callname=="nt_impersonate_client_of_port")
		return "ipc";
	if(callname=="Memory-Section"||callname=="nt_create_section"||callname=="nt_open_section"||callname=="nt_map_view_of_section")
		return "memory-section";
}
// Method to generate bar graph based on the barValue array
function generateBarGraph(){
	
	d3.select("#bar-chart").selectAll("*").remove();
	var malware = document.getElementsByName("malware");
	if(malware[0].checked){
		
		data = barFull;
	}
	else{
		
		data=barMalware;
	}
	var width = 500;
	var height = 150;
	
	var canvas = d3.select("#bar-chart")
			.attr("width", width+100)
			.attr("height", height)
			.append("g")
			.attr("transform","translate(78,20)");
	var lscaleX=d3.scale.linear()
			.range([0,width])
			.domain([0,d3.max(data,function(d){ return d;})]);

	var hscale = d3.scale.linear()
			.domain([0,120])
			.range([0,120]);
	
	var xaxis=d3.svg.axis()
			.scale(lscaleX)
			.ticks(3)
			.orient("top");
			
	var yaxis=d3.svg.axis()
			.scale(hscale)
			.ticks(0)
			.orient("left");
			
	canvas.selectAll("rect")
			.data(data)
			.enter()
				.append("rect")
				.attr("width", function(d){
					
					return lscaleX(d);
				})
				.attr("height", 19)
				.attr("y", function(d,i){
					
					return i*20;
				})
				.attr("class", function(d,i){
					
					return active_api[i];
				})
				.style("opacity", 1.0)
				.on("mouseover", function(d){
					
					d3.select("#tooltip").select("#text1").text("No. of Calls: "+d);
					d3.select("#tooltip").select("#text2").text("");
					d3.select("#tooltip").style({
						
						'display': 'block',
						'top': d3.event.y + 10,
						'left': d3.event.x + 10
					});
				})
				.on("mouseout", function(d){
					
					d3.select("#tooltip").style({
						
						'display': 'none'
					});
				})
				.on("click",function(d, i){
					
					d3.select(this).style("opacity",1.0);
					var pos=api_call_type_remove.indexOf(getClassName(active_api[i]));
					if(pos>-1){
						
						api_call_type_remove.splice(pos,1);
						d3.select("#behaviour-chart").selectAll("*").remove();
						generateBehaviourGraph(behaviourImageData);
					}	
				})
				.on("contextmenu", function(d, i){
					
					d3.event.preventDefault();
					d3.select(this).style("opacity",0.5);
					d3.select("#behaviour-chart").selectAll("*").remove();
					api_call_type_remove.push(getClassName(active_api[i]));
					generateBehaviourGraph(behaviourImageData);
				});
	
	canvas.selectAll("text")
			.data(data)
			.enter()
				.append("text")
				.attr("y", function(d,i){ return i*20+10;})
				.attr("x", function(d,i){ return -75;})
				.attr("font-family", "sans-serif")
				.attr("font-size", "10px")
				.text(function(d, i){ return active_api[i]; });
				
	canvas.append("g")
			.attr("class", "axis")
			.call(xaxis);
			
	canvas.append("g")
			.attr("transform","translate(-1,0)")
			.attr("class", "axis")
			.call(yaxis);	
}